{"version":3,"sources":["components/Modal/Modal.jsx","components/Characters/CharactersItem/CharactersItem.jsx","components/Select/Select.jsx","components/Pagination/Pagination.jsx","Helpers/makeOptions.js","components/Characters/Characters.jsx","components/Episodes/Episodes.jsx","components/Locations/Locations.jsx","components/WatchList/TodoForm.jsx","components/WatchList/TodoList.jsx","components/WatchList/SearchTodo.jsx","components/WatchList/WatchList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Modal","setModalActive","children","className","onClick","type","CharactersItem","char","useState","modalActive","title","src","image","alt","name","species","gender","status","location","Select","props","onChange","e","callback","prevState","target","value","classNames","arrayOptions","map","op","Pagination","currentPage","setCurrentPage","totalPages","event","preventDefault","makeOptions","arr","field","options","Set","el","Characters","characters","setCharacters","filteredOptions","setFilteredOptions","setTotalPages","cardsAmount","setCardsAmount","setPrevPage","setNextPage","useEffect","fetch","then","res","json","chars","info","prev","next","pages","results","count","catch","err","console","log","genderQuery","statusQuery","speciesQuery","response","data","genderOptions","statusOptions","speciesOptions","temp","Object","values","filter","length","forEach","t","id","Episodes","episodes","setEpisodes","episodesQuery","setEpisodesQuery","placeholder","searchQuery","toLocaleLowerCase","trim","includes","searchEpisode","ep","episode","air_date","Locations","locations","setLocations","locQuery","setLocQuery","dimension","loc","typeQuery","result","dimensionOptions","typeOptions","l","searchLocation","TodoForm","onAdd","setTitle","onKeyPress","key","autoComplete","htmlFor","TodoList","todos","onRemove","onToggle","todo","classes","completed","push","join","checked","bind","removeHandler","SearchTodo","query","setQuery","WatchList","setTodos","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","searchTodo","window","confirm","App","href","data-target","to","activeClassName","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.334be583.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Modal.scss';\r\n\r\nexport const Modal = ({setModalActive, children}) => {\r\n  return (\r\n    <div\r\n      className=\"modalw\"\r\n      onClick={() => {\r\n        setModalActive(false);\r\n      }}\r\n    >\r\n      <div className=\"modal__content\">\r\n        {children}\r\n        <div className=\"has-text-centered mt-2\">\r\n          <button\r\n            onClick={() => {\r\n              setModalActive(false);\r\n            }}\r\n            type=\"button\"\r\n            className=\"waves-effect waves-light btn amber darken-4\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Modal} from '../../Modal/Modal';\r\nimport '../Characters.scss';\r\n\r\nexport const CharactersItem = ({char}) => {\r\n  const [modalActive, setModalActive] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div title=\"click to show info\" className=\"card-box\" onClick={() => {\r\n        setModalActive(true);\r\n      }}>\r\n        <div className=\"column card-style\">\r\n          <figure>\r\n            <img src={char.image} alt=\"img\"/>\r\n          </figure>\r\n          <div>\r\n            <p className=\"card-box__name\">{char.name}</p>\r\n            <p className=\"card-box__text\">{char.species}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {modalActive && (\r\n        <Modal\r\n          modalActive={modalActive}\r\n          setModalActive={setModalActive}\r\n          char={char}\r\n        >\r\n          <div className=\"intro\">\r\n            <img className=\"intro__img\" src={char.image} alt=\"char image\"/>\r\n            <div className=\"intro__content\">\r\n              <p className=\"intro__name\">{char.name}</p>\r\n              <hr/>\r\n              <p className=\"intro__title\">\r\n                Gender:\r\n                <span>{char.gender}</span>\r\n              </p>\r\n              <p className=\"intro__title\">\r\n                Species:\r\n                <span>{char.species}</span>\r\n              </p>\r\n              <p className=\"intro__title\">\r\n                Status:\r\n                <span>{char.status}</span>\r\n              </p>\r\n              <p className=\"intro__title\">\r\n                Location:\r\n                <span>{char.location.name}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Select = (props) => {\r\n\r\n  const handleFilter = (e) => {\r\n    props.callback(prevState => {\r\n      return {\r\n        ...prevState,\r\n        [e.target.name]: e.target.value,\r\n      }\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <select\r\n        onChange={handleFilter}\r\n        name={props.name}\r\n        className={props.classNames}\r\n      >\r\n        {props.arrayOptions.map(op => (\r\n          <option key={op} value={op}>{op}</option>\r\n        ))}\r\n      </select>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './pagination.scss';\r\nimport classNames from \"classnames\";\r\n\r\nexport const Pagination = ({currentPage, setCurrentPage, totalPages}) => {\r\n  return (\r\n    <ul className=\"pagination py1\">\r\n      <li className={classNames(\"waves-effect\", {\"waves-effect disabled\": (currentPage < 2)})}>\r\n        <a\r\n          onClick={(event) => {\r\n            event.preventDefault();\r\n            if (currentPage > 1) {\r\n              setCurrentPage(currentPage => currentPage - 1);\r\n            }\r\n          }}\r\n        >\r\n          prev\r\n        </a>\r\n      </li>\r\n\r\n      {currentPage > 1 && (\r\n        <li>\r\n          <a onClick={() => setCurrentPage(1)}>\r\n            1\r\n          </a>\r\n        </li>\r\n      )}\r\n\r\n      {currentPage > 3 && \"...\"}\r\n\r\n      {currentPage > 2 &&\r\n      <li className=\"waves-effect\">\r\n        <a onClick={() => setCurrentPage(currentPage - 1)}>\r\n          {currentPage - 1}\r\n        </a>\r\n      </li>\r\n      }\r\n\r\n      <li className=\"waves-effect active\">\r\n        <a className=\"amber\">\r\n          {currentPage}\r\n        </a>\r\n      </li>\r\n\r\n      {(currentPage < totalPages - 1) &&\r\n      <li className=\"waves-effect\">\r\n        <a onClick={() => setCurrentPage(currentPage + 1)}>\r\n          {currentPage + 1}\r\n        </a>\r\n      </li>\r\n      }\r\n\r\n      {(currentPage < totalPages - 2) && \"...\"}\r\n\r\n      {currentPage < totalPages &&\r\n      <li className=\"waves-effect\">\r\n        <a onClick={() => setCurrentPage(totalPages)}\r\n        >\r\n          {totalPages}\r\n        </a>\r\n      </li>\r\n      }\r\n\r\n      <li className={classNames(\"waves-effect\", {\"waves-effect disabled\": (totalPages <= currentPage)})}>\r\n        <a\r\n          onClick={(event) => {\r\n            event.preventDefault();\r\n            if (currentPage < totalPages) {\r\n              setCurrentPage(currentPage => currentPage + 1);\r\n            }\r\n          }}\r\n        >\r\n          next\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n","export const makeOptions = (arr, field) => {\r\n  const options = new Set(arr.map(el => el[field]));\r\n\r\n  return ['All', ...options];\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport './Characters.scss';\r\nimport {CharactersItem} from \"./CharactersItem/CharactersItem\";\r\nimport {CharactersFilter} from \"./CharactersFilter/CharactersFilter\";\r\nimport {Pagination} from \"../Pagination/Pagination\";\r\nimport {Select} from \"../Select/Select\";\r\nimport {makeOptions} from '../../Helpers/makeOptions';\r\n\r\nexport const Characters = () => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [filteredOptions, setFilteredOptions] = useState({gender: '', status: '', species: ''});\r\n\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [cardsAmount, setCardsAmount] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [prevPage, setPrevPage] = useState('');\r\n  const [nextPage, setNextPage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(`https://rickandmortyapi.com/api/character/?page=${currentPage}`)\r\n      .then(res => res.json())\r\n      .then(chars => {\r\n        if (chars.info.prev) {\r\n          setPrevPage(chars.info.prev)\r\n        } else {\r\n          setPrevPage('')\r\n        }\r\n        if (chars.info.next) {\r\n          setNextPage(chars.info.next)\r\n        } else {\r\n          setNextPage('')\r\n        }\r\n\r\n        setTotalPages(chars.info.pages);\r\n        setCharacters(chars.results);\r\n        setCardsAmount(chars.info?.count);\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    const { gender, status, species } = filteredOptions;\r\n    const genderQuery = gender && gender !== 'All' ? 'gender=' + gender : '';\r\n    const statusQuery = status && status !== 'All' ? '&status=' + status : '';\r\n    const speciesQuery = species && species !== 'All' ? '&species=' + species : '';\r\n\r\n    const response = fetch(`https://rickandmortyapi.com/api/character/?page=${currentPage}${genderQuery}${statusQuery}${speciesQuery}`)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setCharacters(data.results);\r\n      });\r\n\r\n  }, [filteredOptions]);\r\n\r\n  console.log(characters)\r\n\r\n  const genderOptions = makeOptions(characters, 'gender');\r\n  const statusOptions = makeOptions(characters, 'status');\r\n  const speciesOptions = makeOptions(characters, 'species');\r\n\r\n  useEffect(() => {\r\n    let temp = [...characters];\r\n    const options = Object.values(filteredOptions).filter(el => el !== 'All');\r\n\r\n    if (options.length) {\r\n      options.forEach(el => {\r\n        temp = temp.filter(t => t)\r\n      })\r\n    }\r\n\r\n  }, [filteredOptions])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"py3 text-shadow\">Characters:</h2>\r\n      <p className=\"container__info py1\">Found characters: {cardsAmount || \"0\"}</p>\r\n      <p className=\"container__info\">Found pages: {totalPages || \"0\"}</p>\r\n\r\n      <div className=\"select__box\">\r\n        <Select\r\n          callback={setFilteredOptions}\r\n          name='gender'\r\n          arrayOptions={genderOptions}\r\n          classNames=\"char-select mr-2\"\r\n        />\r\n        <Select\r\n          callback={setFilteredOptions}\r\n          name='status'\r\n          arrayOptions={statusOptions}\r\n          classNames=\"char-select mr-2\"\r\n        />\r\n        <Select\r\n          callback={setFilteredOptions}\r\n          name='species'\r\n          arrayOptions={speciesOptions}\r\n          classNames=\"char-select\"\r\n        />\r\n      </div>\r\n\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        totalPages={totalPages}\r\n      />\r\n\r\n      <div className=\"char__list\">\r\n        {characters.map(char => (\r\n          <CharactersItem\r\n            char={char}\r\n            key={char.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Pagination} from \"../Pagination/Pagination\";\r\n\r\nexport const Episodes = () => {\r\n  const [episodes, setEpisodes] = useState([]);\r\n  const [episodesQuery, setEpisodesQuery] = useState('');\r\n\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [cardsAmount, setCardsAmount] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [prevPage, setPrevPage] = useState('');\r\n  const [nextPage, setNextPage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(`https://rickandmortyapi.com/api/episode/?page=${currentPage}`)\r\n      .then(res => res.json())\r\n      .then(el => {\r\n        if (el.info.prev) {\r\n          setPrevPage(el.info.prev)\r\n        } else {\r\n          setPrevPage('')\r\n        }\r\n        if (el.info.next) {\r\n          setNextPage(el.info.next)\r\n        } else {\r\n          setNextPage('')\r\n        }\r\n\r\n        setTotalPages(el.info.pages);\r\n        setEpisodes(el.results);\r\n        setCardsAmount(el.info?.count);\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [currentPage]);\r\n\r\n  const onHandleQuery = (e) => setEpisodesQuery(e.target.value);\r\n\r\n  const searchEpisode = () => {\r\n    const searchQuery = episodesQuery.toLocaleLowerCase().trim();\r\n    const filteredEpisodes = episodes\r\n      .filter(t => t.name.toLocaleLowerCase().includes(searchQuery));\r\n\r\n    return filteredEpisodes;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"py3 text-shadow\">Episodes:</h2>\r\n      <p className=\"container__info py1\">Found episodes: {cardsAmount || \"0\"}</p>\r\n      <p className=\"container__info py1\">Found pages: {totalPages || \"0\"}</p>\r\n\r\n      <div className=\"py1\">\r\n        <input\r\n          value={episodesQuery}\r\n          onChange={onHandleQuery}\r\n          className=\"episodes__input\"\r\n          type=\"text\"\r\n          placeholder=\"search by name...\"\r\n        />\r\n      </div>\r\n\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        totalPages={totalPages}\r\n        totalPages={totalPages}\r\n      />\r\n\r\n      <table className=\"highlight\">\r\n        <thead className=\"green accent-3\">\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Episode</th>\r\n          <th>Air Date</th>\r\n        </tr>\r\n        </thead>\r\n        {searchEpisode().map(ep => (\r\n          <>\r\n            <tbody>\r\n            <tr>\r\n              <td>{ep.id}</td>\r\n              <td>{ep.name}</td>\r\n              <td>{ep.episode}</td>\r\n              <td>{ep.air_date}</td>\r\n            </tr>\r\n            </tbody>\r\n          </>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Pagination} from \"../Pagination/Pagination\";\r\nimport {makeOptions} from \"../../Helpers/makeOptions\";\r\nimport {Select} from \"../Select/Select\";\r\n\r\nexport const Locations = () => {\r\n  const [locations, setLocations] = useState([]);\r\n  const [locQuery, setLocQuery] = useState('');\r\n\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [cardsAmount, setCardsAmount] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [prevPage, setPrevPage] = useState('');\r\n  const [nextPage, setNextPage] = useState('');\r\n\r\n  const [filteredOptions, setFilteredOptions] = useState({ dimension: '', type: '' });\r\n\r\n  useEffect(() => {\r\n    fetch(`https://rickandmortyapi.com/api/location/?page=${currentPage}`)\r\n      .then(res => res.json())\r\n      .then(loc => {\r\n        if (loc.info.next) {\r\n          setNextPage(loc.info.next)\r\n        } else {\r\n          setNextPage('')\r\n        }\r\n        if (loc.info.prev) {\r\n          setPrevPage(loc.info.prev)\r\n        } else {\r\n          setPrevPage('')\r\n        }\r\n\r\n        setTotalPages(loc.info.pages);\r\n        setLocations(loc.results);\r\n        setCardsAmount(loc.info?.count);\r\n      })\r\n      .catch(err => console.log(err))\r\n  }, [currentPage]);\r\n\r\n  const onHandleQuery = (e) => setLocQuery(e.target.value);\r\n\r\n  const searchLocation = () => {\r\n    const searchQuery = locQuery.toLocaleLowerCase().trim();\r\n    const filteredLocations = locations\r\n      .filter(l => l.name.toLocaleLowerCase().includes(searchQuery));\r\n\r\n    return filteredLocations;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { dimension, type } = filteredOptions;\r\n    const dimensionQuery = dimension && dimension !== 'All' ? '&dimension=' + dimension : '';\r\n    const typeQuery = type && type !== 'All' ? '&type=' + type : '';\r\n\r\n    const result = fetch(`https://rickandmortyapi.com/api/location/?page=${dimensionQuery}${typeQuery}`)\r\n      .then((result) => {\r\n        return result.json();\r\n      })\r\n      .then((data) => {\r\n        setLocations(data.results);\r\n      });\r\n\r\n    console.log(result);\r\n  }, [filteredOptions]);\r\n\r\n  console.log(locations);\r\n\r\n  const dimensionOptions = makeOptions(locations, 'dimension');\r\n  const typeOptions = makeOptions(locations, 'type');\r\n\r\n  useEffect(() => {\r\n    let temp = [...locations];\r\n    const options = Object.values(filteredOptions).filter(el => el !== 'All');\r\n\r\n    if (options.length) {\r\n      options.forEach(el => {\r\n        temp = temp.filter(t => t)\r\n      })\r\n    }\r\n\r\n  }, [filteredOptions])\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"py3 text-shadow\">Locations:</h2>\r\n      <p className=\"container__info py1\">Found locations: {cardsAmount || \"0\"}</p>\r\n      <p className=\"container__info py1\">Found pages: {totalPages || \"0\"}</p>\r\n\r\n      <div className=\"py1\">\r\n        <input\r\n          value={locQuery}\r\n          onChange={onHandleQuery}\r\n          className=\"locations__input\"\r\n          type=\"text\"\r\n          placeholder=\"name...\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"select__box\">\r\n        <Select\r\n          callback={setFilteredOptions}\r\n          name='type'\r\n          arrayOptions={typeOptions}\r\n          classNames=\"char-select mr-2\"\r\n        />\r\n        <Select\r\n          callback={setFilteredOptions}\r\n          name='dimension'\r\n          arrayOptions={dimensionOptions}\r\n          classNames=\"char-select mr-2\"\r\n        />\r\n      </div>\r\n\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n        totalPages={totalPages}\r\n      />\r\n\r\n      {cardsAmount > 0 && (\r\n        <table className=\"highlight\">\r\n          <thead className=\"green accent-3\">\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Type</th>\r\n            <th>Dimension</th>\r\n          </tr>\r\n          </thead>\r\n          {searchLocation().map(ep => (\r\n            <>\r\n              <tbody>\r\n              <tr>\r\n                <td>{ep.id}</td>\r\n                <td>{ep.name}</td>\r\n                <td>{ep.type}</td>\r\n                <td>{ep.dimension}</td>\r\n              </tr>\r\n              </tbody>\r\n            </>\r\n          ))}\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\nexport const TodoForm = ({onAdd}) => {\r\n  const [title, setTitle] = useState('');\r\n\r\n  const changeHandler = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const keyPressHandler = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      onAdd(title);\r\n      setTitle('');\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-field col s6\">\r\n      <input\r\n        value={title}\r\n        onChange={changeHandler}\r\n        onKeyPress={keyPressHandler}\r\n        id=\"title\"\r\n        type=\"text\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <label htmlFor=\"title\">Type a new Todo</label>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport const TodoList = ({todos, onRemove, onToggle}) => {\r\n  if (todos.length === 0) {\r\n    return <p className=\"center\">пока дел нет!</p>\r\n  }\r\n\r\n  const removeHandler = (e, id) => {\r\n    e.preventDefault();\r\n    onRemove(id);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {todos.map(todo => {\r\n        const classes = ['todo']\r\n        if (todo.completed) {\r\n          classes.push('completed')\r\n        }\r\n\r\n        return (\r\n          <li className={classes.join(' ')} key={todo.id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={todo.completed}\r\n                onChange={onToggle.bind(null, todo.id)}\r\n              />\r\n              <span>{todo.title}</span>\r\n              <i\r\n                className=\"material-icons red-text\"\r\n                onClick={e => removeHandler(e, todo.id)}\r\n              >\r\n                delete\r\n              </i>\r\n            </label>\r\n          </li>\r\n        )\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const SearchTodo = ({query, setQuery}) => {\r\n\r\n  return (\r\n    <div className=\"input-field col s6\">\r\n      <input\r\n        value={query}\r\n        onChange={e => setQuery(e.target.value)}\r\n        id=\"search\"\r\n        type=\"text\"\r\n        className=\"validate\"\r\n      />\r\n      <label htmlFor=\"search\">search todo...</label>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport './WatchList.scss';\r\nimport {TodoForm} from \"./TodoForm\";\r\nimport {TodoList} from \"./TodoList\";\r\nimport {SearchTodo} from \"./SearchTodo\";\r\n\r\nexport const WatchList = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n\r\n  useEffect(() => {\r\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]');\r\n\r\n    setTodos(saved);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('todos', JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  const addHandler = (title) => {\r\n    const newTodo = {\r\n      title: title,\r\n      id: Date.now(),\r\n      completed: false,\r\n    }\r\n\r\n    setTodos(prev => [newTodo, ...prev])\r\n  };\r\n\r\n  const toggleHandler = (id) => {\r\n    setTodos(prev => prev.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed;\r\n        }\r\n        return todo;\r\n      })\r\n    )\r\n    console.log('toggle')\r\n  };\r\n\r\n  const removeHandler = (id) => {\r\n    const shouldRemove = window.confirm('Are you sure?');\r\n\r\n    if (shouldRemove) {\r\n      setTodos(prev => prev.filter(todo => todo.id !== id))\r\n    }\r\n  };\r\n\r\n  const searchTodo = () => {\r\n    const searchQuery = query.toLocaleLowerCase().trim();\r\n    return todos\r\n      .filter(t => t.title.toLocaleLowerCase().includes(searchQuery));\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <form className=\"col s12\">\r\n          <div className=\"row\">\r\n            <h2 className=\"py3 text-shadow\">My Watch List</h2>\r\n\r\n            <TodoForm onAdd={addHandler}/>\r\n            <SearchTodo query={query} setQuery={setQuery}/>\r\n\r\n            <TodoList\r\n              todos={searchTodo()}\r\n              onRemove={removeHandler}\r\n              onToggle={toggleHandler}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import './App.scss';\nimport './styles/reset.scss';\nimport {BrowserRouter as Router, Switch, Route, Redirect, NavLink} from \"react-router-dom\";\nimport {Characters} from \"./components/Characters/Characters\";\nimport {Episodes} from \"./components/Episodes/Episodes\";\nimport {Locations} from \"./components/Locations/Locations\";\nimport {WatchList} from \"./components/WatchList/WatchList\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav className=\"box-shadow\">\n          <div className=\"nav-wrapper amber\">\n            <a href=\"\" className=\"brand-logo ml-4\">Rick & Morty</a>\n            <a href=\"\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n              <li><NavLink to=\"/characters\" activeClassName=\"active\">Characters</NavLink></li>\n              <li><NavLink to=\"/episodes\" activeClassName=\"active\">Episodes</NavLink></li>\n              <li><NavLink to=\"/locations\" activeClassName=\"active\">Locations</NavLink></li>\n              <li><NavLink to=\"/watchlist\" activeClassName=\"active\">My watch list</NavLink></li>\n            </ul>\n          </div>\n        </nav>\n\n        <Switch>\n          <Route exact path=\"/rm-app\" render={() => {\n              return <Redirect to=\"/characters\"/>\n            }}\n          />\n          <Route path=\"/characters\" component={Characters} />\n          <Route path=\"/episodes\" component={Episodes} />\n          <Route path=\"/locations\" component={Locations} />\n          <Route path=\"/watchlist\" component={WatchList} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport 'bulma/css/bulma.min.css';\nimport ReactDOM from 'react-dom';\nimport 'materialize-css/dist/css/materialize.css';\nimport 'materialize-css/dist/js/materialize';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}